package pomegranate

const leadingDigits = 5
const forwardFile = "forward.sql"
const backwardFile = "backward.sql"

const initForwardTmpl = `BEGIN;
CREATE TABLE migration_history (
	name TEXT NOT NULL,
	time TIMESTAMP WITH TIME ZONE DEFAULT now() NOT NULL,
	who TEXT DEFAULT CURRENT_USER NOT NULL,
	PRIMARY KEY (name)
);

INSERT INTO migration_history(name) VALUES ('%s');
COMMIT;
`

const initBackwardTmpl = `BEGIN;
CREATE OR REPLACE FUNCTION safe_drop_history() RETURNS void AS $$
BEGIN
	IF (SELECT count(*) FROM migration_history)=0 THEN
		DROP TABLE migration_history;
	ELSE
		RAISE 'migration_history table not empty';
	END IF;
END;
$$ LANGUAGE plpgsql;

DELETE FROM migration_history WHERE name='%s';
SELECT safe_drop_history();
DROP FUNCTION safe_drop_history();
COMMIT;
`

const forwardTmpl = `BEGIN;
-- vvvvvvvv PUT FORWARD MIGRATION CODE BELOW HERE vvvvvvvv

SELECT 1 / 0; -- delete this line

-- ^^^^^^^^ PUT FORWARD MIGRATION CODE ABOVE HERE ^^^^^^^^
INSERT INTO migration_history(name) VALUES ('%s');
COMMIT;
`

const backwardTmpl = `BEGIN;
-- vvvvvvvv PUT BACKWARD MIGRATION CODE BELOW HERE vvvvvvvv

SELECT 1 / 0; -- delete this line

-- ^^^^^^^^ PUT BACKWARD MIGRATION CODE ABOVE HERE ^^^^^^^^
DELETE FROM migration_history WHERE name='%s';
COMMIT;
`

const srcTmpl = `// Code generated by pmg. DO NOT EDIT.
package {{.PackageName}} 
{{if .GenerateTag}}// The following comment tags this file for overwriting by "go generate"
//go:generate pmg ingest -package {{.PackageName}} -gofile {{.GoFile}}
// You can run "go generate {{.GoFile}}" to regenerate this file from the .sql migrations{{end}}

import "github.com/btubbs/pomegranate"

var All = []pomegranate.Migration{
{{range .Migrations}}  {
  Name: "{{.Name}}",
  ForwardSQL: {{.QuotedForward}},
  BackwardSQL: {{.QuotedBackward}},
  },{{end}}
}
`

type srcContext struct {
	PackageName string
	Migrations  []Migration
	GenerateTag bool
	GoFile      string
}
